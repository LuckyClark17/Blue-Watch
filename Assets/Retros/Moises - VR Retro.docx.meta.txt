Throughout the development of the Blue Watch project, I made major contributions. To start off, I constructed the basic field of the soccer game, including modeling the pitch and the goal nets. Specifically, I made sure that the field was accurately represented in the game, as this was essential for creating a realistic soccer game that was styled after FIFA. This part extended from my Jan 9th commit to the Jan 21st commit. 

Secondly, I also set up colliders to detect goals for both teams. This involved creating scripts that would detect when the ball crossed the goal line and then trigger a message to be displayed to the scoring team. I worked closely with Ryan to make sure that the message was good to display, and we agreed on a message, in which he also helped me incorporate a timer to detect the length of the message’s display. (Jan 26 - Jan 30 commits)

In addition, I also started to add players onto the field and created basic starting scripts for them. This involved designing models for each player and then setting up the basic positions of the defenders, midfielders, and forwards for both teams. (February 7th commit)

And then, a part that I would be working on for a while, I started on the goalkeeper models and their behavior scripts for both goalkeepers. I spent several weeks working on these, utilizing clamps and the MoveTowards() method to move the goalkeeper to the ball and shadow the opposing player's movements. I encountered several bugs with this and many issues with clamps for the goalkeeper. This revolved around a diving mechanism I tried to implement, the rotation towards the ball constantly and the limit to where it can reach the ball. After all the bugs,  it ended up working out after Ryan helped me with it. (February 9th to March 9th commits). 

After that, I started programming the opposing red team's AI forward script. Specifically, I set up various different possible paths for the forward to take when attacking the home goal, using the MoveTowards() method. I constructed several levels to these paths, with it being activated once the ball was passed to the forward by its teammate, and it returning to the midline when it did not have the ball or lost the ball. I spent several weeks on this, with multiple errors that happened as the forward was stuck on level 3 for quite a while. This led to many frustrating class periods, but Ryan eventually helped me and revamped my code to work. (March 21st to April 12th commits). 

As the deadline was coming up, I focused on creating the stands, the stadium, and audience members from both sides, as well as the Mexican and American model audiences. This involved creating detailed models to fit their respective cultures, and also animating the Mexican and United States flags to put on the field, representing the team’s flags. I also created prefabs for both of these and had reactions for when a goal was scored, which added to the overall game experience (April 14 to April 28th commits). 

Toward the end of the project, I set up the menu scene with start/quit game buttons and implemented the animations I had done for 2 player models that represented the Blue Watch program on the menu scene. Additionally, I created all the animations for the "ultimate" feature that increased the player's speed once it had reached a certain amount of charge, the speed bar at the top right to display how much stamina the player had, and the flags for Mexico and USA animations for the field. (April 28th - May 2nd commits). 

Finally, I constructed the scoreboard and set up variables to detect scores and who wins. This would also be utilized with a Singleton from the Game Manager script since it was the only way to store the values of the game and detect winning. This was an essential part of the game, as it provided users with a clear sense of progress and added to the overall competitiveness of the experience. (May 2nd- May 4th commits, when the project is due). 



My partner, Ryan Clark, contributed an extensive amount to the project. He helped me with many of my bugs and problems, and overall was an excellent partner, creating the major aspects of the game. 
To begin, he set up the shooting behavior of the ball. This included charging up for shot power and utilizing the animation I had made for the stamina bar to also incorporate a limit to the player’s stamina. With the shooting, he intuitively created a projectile line that the ball could follow from the player’s shot, and I was very impressed by the fact he barely used any tutorials. He also set up the different interactions between the “picking up” the ball by any player. 
Furthermore, he utilized your advice for implementing inheritance for a Player Script, and then using the Forwards, Midfielders, Defenders, etc as the child scripts. He put in the basic requirements for the behavior, and this involved a major part of the game: passing. He effectively created passing behavior from the goalkeeper to defenders to midfielders to forwards, based on if anything was in their way to pass. I was astonished at his level of coding and amazed at how optimized his code was, overall, this was probably one of his best achievements in the project. Then, he revamped the existing code I had for the AI red forward to implement object avoidance, an intuitive way to create an AI that detects the enemy team and moves around them towards the goal.  Finally, he worked on the RED AI shooting towards the goal and finished it, which I think was one of the hardest parts of this project.  
Overall, Ryan helped me with many parts of my own contributions by improving my code which led to my success in creating Blue Watch. I would most definitely give Ryan a 100, a 105 if possible. 
As a group, I felt as if we did well on communication between our different parts of the project. Specifically, when I needed help, Ryan was always there to aid me and give me any possible tips, and in some cases, he had to step in and revamp my code so it could run efficiently and effectively. Additionally, from the very start of the game, we divided up our roles, as I was in charge of initial modeling, goalie behavior, and RED AI, while he would focusing on the shooting and passive behavior of both the opposing and home team. This worked effectively, and I would have liked to add that Ryan also asked others for help when I was unable to provide a good coding solution. I liked that he also helped others when they needed help, and in turn, they would also help us in times of need. Moreover, as a group, I felt as if we communicated our struggles with each other effectively, for I was not afraid to let him know when I was stumped at a certain bug or issue I was having with my code. In the same manner, in the few times, Ryan encountered major program problems, he did the same. Furthermore, as a group, we always let each other know when we would be adding or changing certain aspects of the game, so as to complete decisions about our project together and cohesively. Overall, we worked well as a team together, and I greatly appreciated Ryan as a coding partner. 
Going forward, what things I would personally do differently would be utilizing learning material online and overall tutoring videos on concepts I was not familiar with within Unity. For the majority of the project, I had been trying to complete difficult tasks on my own, instead of searching for tutorials or helpful information online. Furthermore, I would also try to ask for more help in class as there would be times when both I and my partner would be stumped, and I would be hesitant to ask the teacher for help. Therefore, in future projects and coding endeavors in my career, I would now be inclined to ask for help whenever I need it. Furthermore, another thing I would be doing differently going forward was my own sense of discipline in coding. To expand on this, I primarily worked on the project only in class, when I could have put in extra work outside of class. Although I’ve had a lot of my time taken away by the workload of 5 AP classes, a fast-food job, and more responsibilities out of school, I know I could have made time to work on the project at home, even if not necessary. Overall, in the future, I will be not afraid to ask questions, will not be hesitant to use online help/tutorials, and will apply myself more in whatever coding project in the future. 

